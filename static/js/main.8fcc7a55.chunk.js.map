{"version":3,"sources":["index.js"],"names":["InputText","props","className","textForLabel","type","name","value","imageURL","onChange","OnChangeimageURL","InputNumber","rowsColumns","onClick","onClickPlus","onClickMinus","Button","id","playAgain","src","hackerMan","UserInterface","status","rows","columns","NavBar","IconMenuClick","TimeMeasurment","GameIsStarted","gameIsOver","callbackFunction","CongratulationMessage","visible","style","opacity","transition","finalTime","Image","img","document","getElementById","canvas","width","naturalWidth","height","naturalHeight","peaceWidth","numberOfColumns","peaceHeight","numberOfRows","startXCoordinate","currentColumn","startYCoordinate","currentRow","getContext","drawImage","dataURL","toDataURL","imageTracker","ImgCanvas","styleForImg","ref","RefForImgDiv","imgTracker","myStyle","RowIMG","RowImages","i","push","onKeyPress","styleForRows","Board","firstTimeRending","FullBoard","Game","state","EmptySquare","row","column","imgDivWidth","startGame","numberOfRowsForUserEdit","numberOfColumnsForUserEdit","UserSpaceDiv","anObject","imgDivDim","imgDivRef","React","createRef","handleClick","bind","handleKeyboard","mixImages","CalcWidthHeight","HandlePlusButton","HandleMinusButton","handleIconMenuClick","this","emptySquare","length","top","left","columWidth","setState","rowHeight","disabled","placeInArray","columnDifference","leftPosition","topPosition","Math","abs","checkIfGameIsOver","rowDifference","outline","catchEvent","EmSqRow","EmSqCol","elemToMoveId","key","find","elem","pieceId","CheckForXMoving","preventDefault","CheckForYMoving","randomNumber","placeInArray_1","placeInArray_2","deltaRow","deltaColumn","helpRowColumn","CalcImgDivDimens","numberOfPieces","anArray","floor","random","splice","zIndex","removeEventListener","addEventListener","Tracker","j","Object","assign","e","target","CreateImageTracker","current","clientWidth","clientHeight","setTimeout","blur","childData","Component","SourceImage","RefForSImage","crossorigin","onLoad","onError","time","minutes","seconds","parseInt","timer","setInterval","tick","slice","MainClass","imageIsLoaded","RendAgain","RendOnError","RendAgainImageIsLoaded","RendAgainImageLoadError","event","ReactDOM","render"],"mappings":"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","file":"static/js/main.8fcc7a55.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\n\n\nfunction InputText(props){\n    return(\n        <div className=\"InputText\">\n            <label className=\"InpNumLab\">{props.textForLabel}</label>\n        <input type=\"text\" name=\"url\" value={props.imageURL}\n        onChange={props.OnChangeimageURL}/>\n        </div>   \n    );\n}\n\nfunction InputNumber(props){\n    return(\n        <div className=\"InputNumber\">\n            <label className=\"InpNumLab\">\n    {props.textForLabel}</label>\n            <input type=\"number\" value={props.rowsColumns}>\n            </input>\n            <button className=\"PlusButton\" name={props.name}\n            onClick={props.onClickPlus}>+</button>\n            <button className=\"MinusButton\" name={props.name}\n            onClick={props.onClickMinus}>-</button>\n        </div>\n    );\n}\n\nfunction Button(props){\n    return (\n        <div className=\"InputButton\">\n            <button id=\"start\" className=\"Button\" onClick={()=>props.onClick()}>Start Game</button>\n            <button id=\"playAgain\" className=\"Buttonr\" onClick={()=>props.playAgain()}>\n                <img className=\"icon\"\n            src=\"https://htmlacademy.ru/assets/icons/reload-6x-white.png\"></img>Play Again</button>\n            <button id=\"hacker\" className=\"Button\" onClick={()=>props.hackerMan()} >Solve Puzzle</button>\n        </div>\n    );\n}\n\nfunction UserInterface(props){\n    const className=(props.status)? \"UserSpace\":\"UserSpaceHidden\"\n    return (<div id={props.id} className={className}>\n        <InputText\n        imageURL={props.imageURL}\n        textForLabel=\"Image URL:\"\n        OnChangeimageURL={props.OnChangeimageURL}        \n        />\n        <InputNumber\n            rowsColumns={props.rows}\n            onClickPlus={props.onClickPlus}\n            onClickMinus={props.onClickMinus}\n            name=\"numberOfRows\"\n            textForLabel=\"Number of rows: \"\n        />\n        <InputNumber\n            rowsColumns={props.columns}\n            onClickPlus={props.onClickPlus}\n            onClickMinus={props.onClickMinus}\n            name=\"numberOfColumns\"\n            textForLabel=\"Number of columns: \"\n        />\n        <Button\n        onClick={props.onClick} \n        hackerMan={props.hackerMan}\n        playAgain={props.playAgain}\n        />\n        </div>);\n    }\n\n    function NavBar(props){\n        return(\n            <div id=\"navbar\">\n            <a className=\"Title\">MyPuzzle</a>\n            <a onClick={()=>{props.IconMenuClick()}}className=\"IconMenu\"><i className=\"fa fa-bars\"></i></a> \n            <TimeMeasurment \n            GameIsStarted={props.GameIsStarted}\n            gameIsOver={props.gameIsOver}\n            callbackFunction={props.callbackFunction}/>\n        </div>\n        ); \n    }\n\n    function CongratulationMessage(props){\n        const invisible={opacity:\"0\"};\n        const visible={opacity:\"1\", transition:\"opacity 5s\"};\n        return(\n        (props.visible)?\n        <div id=\"CongratMessage\" style={visible}>\n        <a>Awesome! You have finished the game in {props.finalTime}</a>\n    </div> : <div id=\"CongratMessage\" style={invisible}>\n        <a>Awesome! You have finished the game</a>\n    </div>\n    );\n            \n        \n    }\n\n    function Image(props){\n        const img=document.getElementById(\"sourceImage\");\n        const canvas=document.getElementById(\"canvas\");\n   \n        canvas.width=img.naturalWidth;\n        canvas.height=img.naturalHeight;\n  \n        const peaceWidth=img.naturalWidth\n        /props.numberOfColumns;\n        const peaceHeight=img.naturalHeight\n        /props.numberOfRows;\n    \n        const startXCoordinate=props.currentColumn\n        *peaceWidth-peaceWidth;\n        const startYCoordinate=props.currentRow\n        *peaceHeight-peaceHeight;\n    \n        const ctx=canvas.getContext(\"2d\");\n        ctx.drawImage(img,startXCoordinate,\n           startYCoordinate,peaceWidth,peaceHeight,0,0,\n            img.naturalWidth,img.naturalHeight);\n        \n        const dataURL=canvas.toDataURL();\n      \n        const imageTracker=\n        (props.currentRow-1)*props.numberOfColumns\n        +props.currentColumn;\n    \n        const ImgCanvas=<img src={dataURL} className=\"img\"\n        style={props.styleForImg}></img>\n            \n        return(\n            (imageTracker===props.numberOfColumns*props.numberOfRows) ? \n            <div ref={props.RefForImgDiv} className=\"imgDiv\" \n            style={props.imgTracker[imageTracker-1].myStyle}>\n            {ImgCanvas}</div> : \n            <div className=\"imgDiv\" \n            onClick={()=>props.onClick(imageTracker-1)}\n            style={props.imgTracker[imageTracker-1].myStyle}>\n            {ImgCanvas}</div>\n        );\n    }\n    function RowIMG(props){\n        const RowImages=[];  \n        for(let i=0;i<props.numberOfColumns;i++){\n            RowImages.push(<Image\n                numberOfRows={props.numberOfRows} \n                numberOfColumns={props.numberOfColumns}\n                currentRow={props.currentRow}\n                currentColumn={i+1}\n                onClick={props.onClick}\n                onKeyPress={props.onKeyPress}\n                imgTracker={props.imgTracker}\n                styleForImg={props.styleForImg}\n                RefForImgDiv={props.RefForImgDiv}\n                \n                />);\n        }\n        return(\n            <div style={props.styleForRows}>\n               {RowImages}\n            </div>\n        );\n    }\n    function Board(props){\n        if(!props.firstTimeRending){\n            \n            const FullBoard=[];\n            for(let i=0;i<props.numberOfRows;i++){\n            FullBoard.push(<RowIMG \n                numberOfRows={props.numberOfRows} \n                numberOfColumns={props.numberOfColumns}\n                currentRow={i+1}\n                onClick={props.onClick}\n                onKeyPress={props.onKeyPress}\n                imgTracker={props.imgTracker}\n                styleForRows={props.styleForRows}\n                styleForImg={props.styleForImg}\n                RefForImgDiv={props.RefForImgDiv}\n                \n               />);\n        }\n        return (  \n            <div className=\"Board\">\n                {FullBoard}\n        </div> \n        );}else{return <div className=\"Board\"></div>;}}\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            numberOfRows:3,\n            numberOfColumns:3, \n            imgTracker:[],\n            EmptySquare:{\n                row:\"\",\n                column:\"\"},\n           styleForRows:{width:\"100%\",height:\"33.333%\"},\n           imgDivWidth:\"33.3333%\",\n           styleForImg:{},\n           startGame:false,\n           firstTimeRending:true,\n           numberOfRowsForUserEdit:3,\n           numberOfColumnsForUserEdit:3, /* BecauseRowsOrColumnsHasToBeSetInCreateImageTracker */ \n           UserSpaceDiv:true /*IWantedToHandleUserSpaceDivOnClik*/,\n           gameIsOver:false,\n           GameIsStarted:false,\n           finalTime:\"\", /*message to add in text after game is solved */\n           anObject:{}, /*because I dont want to calculate on every click width and height*/\n           imgDivDim:{}\n\n        };\n        this.imgDivRef=React.createRef();\n        this.handleClick=this.handleClick.bind(this);\n        this.handleKeyboard=this.handleKeyboard.bind(this);\n        this.mixImages=this.mixImages.bind(this);\n        this.CalcWidthHeight=this.CalcWidthHeight.bind(this);\n        this.hackerMan=this.hackerMan.bind(this);\n        this.HandlePlusButton=this.HandlePlusButton.bind(this);\n        this.HandleMinusButton=this.HandleMinusButton.bind(this);\n        this.playAgain=this.playAgain.bind(this);\n        this.handleIconMenuClick=this.handleIconMenuClick.bind(this);\n        this.callbackFunction=this.callbackFunction.bind(this);\n    }\n    \n    hackerMan(){\n        const imgTracker=this.state.imgTracker; \n        const emptySquare=this.state.EmptySquare;\n\n        /*const anObject=this.CalcWidthHeight(\n            this.state.numberOfRows,\n            this.state.numberOfColumns);*/\n        /*const imgDivDim=this.CalcImgDivDimens();*/\n        let columWidth=this.state.imgDivDim.width+\"px\";\n\n\n        for(let i=0;i<imgTracker.length-2;i++){\n            imgTracker[i].top=0;imgTracker[i].left=0;\n            imgTracker[i].myStyle={\n                top:\"0px\",left:\"0px\",\n                width:this.state.anObject.columWidth,\n                \n            };\n        }\n        imgTracker[imgTracker.length-2].top=0; \n        imgTracker[imgTracker.length-2].left=this.state.imgDivDim.width;\n        imgTracker[imgTracker.length-2].myStyle=\n        {top:\"0px\",left:this.state.imgDivDim.width+\"px\",width:this.state.anObject.columWidth};\n        imgTracker[imgTracker.length-2].row=this.state.numberOfRows;\n        imgTracker[imgTracker.length-2].column=this.state.numberOfColumns;\n        emptySquare.row=this.state.numberOfRows;\n        emptySquare.column=this.state.numberOfColumns-1;\n\n        this.setState({imgTracker:imgTracker,\n            EmptySquare:emptySquare,\n            styleForRows:{width:\"100%\",height:this.state.anObject.rowHeight}\n        });\n        document.getElementById(\"hacker\").disabled=true;\n    }\n    CheckForXMoving(placeInArray){\n       \n        /*const anObject=this.CalcWidthHeight(\n            this.state.numberOfRows,\n            this.state.numberOfColumns); */\n        /*const imgDivDim=this.CalcImgDivDimens(); */\n        \n        const imgTracker=this.state.imgTracker;\n        const columnDifference=this.state.EmptySquare.column-\n        imgTracker[placeInArray].column;\n        let leftPosition=\"\";\n        let topPosition=\"\";\n       \n        if(Math.abs(columnDifference)==1 && \n        imgTracker[placeInArray].row==this.state.EmptySquare.row){\n           \n            imgTracker[placeInArray].left+=\n            columnDifference*this.state.imgDivDim.width;\n            leftPosition=imgTracker[placeInArray].left+\"px\";\n            topPosition=imgTracker[placeInArray].top+\"px\";\n\n            imgTracker[placeInArray].myStyle={\n                left:leftPosition,\n                top:topPosition,\n                width:this.state.anObject.columWidth\n            };\n            imgTracker[placeInArray].column+=columnDifference;    \n\n            const emptySquare=this.state.EmptySquare;\n            emptySquare.column-=columnDifference;\n\n            this.setState({imgTracker:imgTracker,\n                EmptySquare:emptySquare});\n            \n            this.checkIfGameIsOver();\n            return false;\n        }  \n        return true;   \n    }\n\n    CheckForYMoving(placeInArray){\n       /* const anObject=this.CalcWidthHeight(\n            this.state.numberOfRows,\n            this.state.numberOfColumns); */\n        /*const imgDivDim=this.CalcImgDivDimens();*/\n\n        const imgTracker=this.state.imgTracker;\n        const rowDifference=this.state.EmptySquare.row-\n        imgTracker[placeInArray].row;\n        let topPosition=\"\";\n        let leftPosition=\"\";\n\n        if(Math.abs(rowDifference)==1 && \n        imgTracker[placeInArray].column==this.state.EmptySquare.column){\n           \n            imgTracker[placeInArray].top+=\n            rowDifference*this.state.imgDivDim.height;\n            topPosition=imgTracker[placeInArray].top+\"px\";\n            leftPosition=imgTracker[placeInArray].left+\"px\";\n            imgTracker[placeInArray].myStyle={\n                top:topPosition,\n                left:leftPosition,\n                width:this.state.anObject.columWidth};\n            imgTracker[placeInArray].row+=rowDifference;    \n\n            const emptySquare=this.state.EmptySquare;\n            emptySquare.row-=rowDifference;\n\n            this.setState({imgTracker:imgTracker,\n                EmptySquare:emptySquare\n            });\n            \n            this.checkIfGameIsOver();\n        }\n    }\n\n    checkIfGameIsOver(){\n        const imgTracker=this.state.imgTracker;\n        const emptySquare=this.state.EmptySquare;\n\n       /* const anObject=this.CalcWidthHeight(\n            this.state.numberOfRows,\n            this.state.numberOfColumns); */\n\n        let gameIsOver=true;\n        for(let i=0;i<imgTracker.length;i++){\n            if (imgTracker[i].top!=0 || imgTracker[i].left!=0){\n                gameIsOver=false;\n                break; \n            }\n        }\n        if (gameIsOver){\n            emptySquare.row=\"\";\n            emptySquare.column=\"\";\n            for(let i=0;i<imgTracker.length;i++){\n                imgTracker[i].myStyle={\n                    width:this.state.anObject.columWidth,\n                    outline:\"2px solid hsl(0,0%,100%,0)\",\n                    transition:\"outline 5s, opacity 5s\"\n                }\n            }\n            this.setState({imgTracker:imgTracker,\n                EmptySquare:emptySquare,\n                gameIsOver:true,\n            \n            });\n        }\n    }\n\n    handleKeyboard(catchEvent){\n       \n        const imgTracker=this.state.imgTracker;\n        const EmSqRow=this.state.EmptySquare.row;\n        const EmSqCol=this.state.EmptySquare.column;\n        let elemToMoveId=\"\";\n        let leftPosition; let topPosition;\n        if(catchEvent.key===\"ArrowRight\"){\n            if(EmSqCol>1){\n                elemToMoveId=\n            imgTracker.find(elem=>elem.row==EmSqRow && \n                elem.column+1==EmSqCol).pieceId;\n            this.CheckForXMoving(elemToMoveId-1);\n            }\n        }else if(catchEvent.key===\"ArrowLeft\"){\n            if(EmSqCol<this.state.numberOfColumns){\n                elemToMoveId=\n            imgTracker.find(elem=>elem.row===EmSqRow && \n                elem.column-1===EmSqCol).pieceId;\n\n            this.CheckForXMoving(elemToMoveId-1);\n            }\n        }else if(catchEvent.key===\"ArrowUp\"){\n            catchEvent.preventDefault();\n            if(EmSqRow<this.state.numberOfRows){\n                elemToMoveId=\n            imgTracker.find(elem=>elem.column===EmSqCol \n                && elem.row-1===EmSqRow).pieceId;\n\n            this.CheckForYMoving(elemToMoveId-1);\n            }\n        }else if(catchEvent.key===\"ArrowDown\"){\n            catchEvent.preventDefault();\n            if(EmSqRow>1){\n                elemToMoveId=\n            imgTracker.find(elem=>elem.column==EmSqCol \n                && elem.row+1==EmSqRow).pieceId;\n\n            this.CheckForYMoving(elemToMoveId-1)\n            }  \n        }\n    }\n    handleClick(placeInArray){\n        if(this.CheckForXMoving(placeInArray)){\n            this.CheckForYMoving(placeInArray);\n        } \n    }\n    mixImages(){\n       /* const anObject=this.CalcWidthHeight(\n            this.state.numberOfRows,\n            this.state.numberOfColumns); */\n        const imgDivDim=this.CalcImgDivDimens();\n    \n        const numberOfPieces=this.state.numberOfRows*\n        this.state.numberOfColumns;\n        const anArray=[];\n        let randomNumber;let topPosition,leftPosition;\n        let placeInArray_1,placeInArray_2;\n        const imgTracker=this.state.imgTracker;\n        let deltaRow,deltaColumn,helpRowColumn;\n\n        for(let i=0;i<numberOfPieces-1;i++){\n            anArray.push(i);\n        }\n        \n        while(anArray.length>=2){\n\n            randomNumber=\n        Math.floor(Math.random()*anArray.length);\n        placeInArray_1=anArray[randomNumber];\n        anArray.splice(randomNumber,1);\n        \n        randomNumber=\n        Math.floor(Math.random()*anArray.length);\n        placeInArray_2=anArray[randomNumber];\n        anArray.splice(randomNumber,1);\n\n        deltaRow=imgTracker[placeInArray_1].row-\n        imgTracker[placeInArray_2].row;\n        deltaColumn=imgTracker[placeInArray_1].column-\n        imgTracker[placeInArray_2].column;\n\n        helpRowColumn=imgTracker[placeInArray_1].row;\n        imgTracker[placeInArray_1].row=imgTracker[placeInArray_2].row;\n        imgTracker[placeInArray_2].row=helpRowColumn;\n\n        helpRowColumn=imgTracker[placeInArray_1].column;\n        imgTracker[placeInArray_1].column=imgTracker[placeInArray_2].column;\n        imgTracker[placeInArray_2].column=helpRowColumn;\n        \n        imgTracker[placeInArray_1].top=(-1)*deltaRow*imgDivDim.height;\n        imgTracker[placeInArray_1].left=(-1)*deltaColumn*imgDivDim.width;\n        topPosition=imgTracker[placeInArray_1].top+\"px\";\n        leftPosition=imgTracker[placeInArray_1].left+\"px\";\n        imgTracker[placeInArray_1].myStyle={\n            width:this.state.anObject.columWidth,\n            top:topPosition,\n            left:leftPosition\n        }\n        \n        imgTracker[placeInArray_2].top=deltaRow*imgDivDim.height;\n        imgTracker[placeInArray_2].left=deltaColumn*imgDivDim.width;\n        topPosition=imgTracker[placeInArray_2].top+\"px\";\n        leftPosition=imgTracker[placeInArray_2].left+\"px\";\n        imgTracker[placeInArray_2].myStyle={\n            width:this.state.anObject.columWidth,\n            top:topPosition,\n            left:leftPosition\n        }\n        }\n        const emptySquare=this.state.EmptySquare;\n        emptySquare.row=this.state.numberOfRows;\n        emptySquare.column=this.state.numberOfColumns;\n\n        imgTracker[imgTracker.length-1].myStyle=\n        {opacity:\"0\",width:this.state.anObject.columWidth,zIndex:\"-1\"};\n\n            this.setState({\n                EmptySquare:emptySquare,\n                imgTracker:imgTracker,\n                styleForImg:{},\n                UserSpaceDiv:!this.state.UserSpaceDiv,\n                GameIsStarted:true,\n                imgDivDim:imgDivDim\n            }); \n        \n    document.removeEventListener(\"keydown\",this.handleKeyboard); \n    document.addEventListener(\"keydown\",this.handleKeyboard); \n    document.getElementById(\"start\").disabled=true;\n    document.getElementById(\"hacker\").disabled=false;\n    }\n\n    CreateImageTracker(rows,columns){  \n        const anObject=this.CalcWidthHeight(rows,columns);\n        const Tracker={\n            pieceId:0,\n            row:0,\n            column:0,\n            left:0,\n            top:0,\n            myStyle:{\n                width:anObject.columWidth,\n            }\n        };\n        const imgTracker=[];\n        for(let i=1;i<=rows;i++){\n            Tracker.row=i;\n            for(let j=1;j<=columns;j++){\n                Tracker.pieceId+=1;\n                Tracker.column=j;\n                imgTracker.push(Object.assign({},Tracker));\n            }\n        }\n        this.setState({\n            imgTracker:imgTracker,\n            numberOfRows:rows,\n            numberOfColumns:columns,\n            styleForRows:{\n                width:\"100%\",\n                height:anObject.rowHeight\n            },\n            EmptySquare:{\n                row:\"\",\n                column:\"\"},\n            GameIsStarted:false,\n            gameIsOver:false,\n            anObject:anObject\n            \n        }); \n        document.getElementById(\"start\").disabled=false;\n        document.getElementById(\"hacker\").disabled=true;\n    }\n\n    HandlePlusButton(e){\n        let numberOfRows,numberOfColumns;\n        if(e.target.name===\"numberOfRows\"){\n            numberOfRows=this.state.numberOfRows+1;\n            numberOfColumns=this.state.numberOfColumns;\n            this.setState({\n                numberOfRowsForUserEdit:numberOfRows});\n            this.CreateImageTracker(numberOfRows,numberOfColumns);\n        }else if(e.target.name===\"numberOfColumns\"){\n            numberOfRows=this.state.numberOfRows;\n            numberOfColumns=this.state.numberOfColumns+1;\n            this.setState({\n                numberOfColumnsForUserEdit:numberOfColumns});\n            this.CreateImageTracker(numberOfRows,numberOfColumns);\n        }\n        }\n\n    HandleMinusButton(e){\n        let numberOfRows, numberOfColumns;\n        if(e.target.name===\"numberOfRows\"){\n            numberOfRows=this.state.numberOfRows-1;\n            numberOfColumns=this.state.numberOfColumns;\n            this.setState({\n                numberOfRowsForUserEdit:numberOfRows});\n            this.CreateImageTracker(numberOfRows,numberOfColumns);\n        }else if(e.target.name===\"numberOfColumns\"){\n            numberOfRows=this.state.numberOfRows;\n            numberOfColumns=this.state.numberOfColumns-1;\n            this.setState({\n                numberOfColumnsForUserEdit:numberOfColumns});\n            this.CreateImageTracker(numberOfRows,numberOfColumns);\n        }\n    }\n    \n    CalcWidthHeight(rows,columns){\n        const anObject={\n            rowHeight:\"\",\n            columWidth:\"\",\n        };\n        anObject.rowHeight=100/\n        rows+\"%\";\n        anObject.columWidth=100/\n        columns+\"%\";\n        return anObject;\n    }\n\n    CalcImgDivDimens(){\n        \n        const imgDivDim={\n            width:\"\",\n            height:\"\"\n        }\n        imgDivDim.width=this.imgDivRef.current.clientWidth;\n        imgDivDim.height=this.imgDivRef.current.clientHeight;\n        return imgDivDim;  \n    }\n\n    playAgain(){\n        this.CreateImageTracker(this.state.numberOfRows,\n            this.state.numberOfColumns);\n            \n        setTimeout(function(){\n                document.getElementById(\"playAgain\").blur();\n            },1000);\n       \n       \n    }\n    handleIconMenuClick(){\n        this.setState({UserSpaceDiv:!this.state.UserSpaceDiv});\n    }\n    \n\n    componentDidMount(){\n        this.CreateImageTracker(this.state.numberOfRows,\n            this.state.numberOfColumns);\n        this.setState({firstTimeRending:false});\n    }\n    callbackFunction(childData){\n        this.setState({finalTime:childData});\n    }\n    render(){\n        return(\n            <div>\n            <NavBar\n            IconMenuClick={this.handleIconMenuClick}\n            GameIsStarted={this.state.GameIsStarted}\n            gameIsOver={this.state.gameIsOver}\n            callbackFunction={this.callbackFunction}/>\n            <div className=\"GameDiv\">    \n            <Board \n            numberOfRows={this.state.numberOfRows}\n            numberOfColumns={this.state.numberOfColumns}\n            onClick={this.handleClick}\n            onKeyPress={this.handleKeyboard}\n            imgTracker={this.state.imgTracker}\n            styleForRows={this.state.styleForRows}\n            styleForImg={this.state.styleForImg}\n            firstTimeRending={this.state.firstTimeRending}\n            RefForImgDiv={this.imgDivRef}\n            \n            />\n            <UserInterface\n            imageURL={this.props.imageURL}\n            OnChangeimageURL={this.props.OnChangeimageURL}\n\n            rows={this.state.numberOfRowsForUserEdit}\n            columns={this.state.numberOfColumnsForUserEdit}\n            onClickPlus={this.HandlePlusButton}\n            onClickMinus={this.HandleMinusButton}\n\n            onClick={this.mixImages} \n            hackerMan={this.hackerMan}\n            playAgain={this.playAgain}\n\n            id=\"UserSpace\"\n            status={this.state.UserSpaceDiv}\n            />\n           \n            </div>\n            {this.state.gameIsOver ? \n            <CongratulationMessage visible={true}\n            finalTime={this.state.finalTime}/>: <CongratulationMessage visible={false}/>}\n            </div>\n            \n        );\n    }\n}\n\nfunction SourceImage(props){\n    return (\n        <div>\n        <img ref={props.RefForSImage}\n    src={props.imageURL} id=\"sourceImage\" \n    width=\"50\" height=\"50\" crossorigin=\"anonymous\"\n    onLoad={props.onLoad}\n    onError={props.onError}/>\n    <canvas id=\"canvas\"></canvas>\n    \n    </div>\n    );   \n}\n\nclass TimeMeasurment extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            time:{\n                minutes:0,\n                seconds:0,\n            }}}\n    tick(){\n        if(this.props.GameIsStarted && !this.props.gameIsOver){\n            this.setState({\n                time:{\n                    minutes:this.state.time.minutes+parseInt((this.state.time.seconds+1)/60)*1,\n                    seconds:(this.state.time.seconds+1)%60\n                }\n            });\n        }else if(this.props.GameIsStarted && this.props.gameIsOver){\n         this.props.callbackFunction(this.state.time.minutes+\" minutes\"+\" and \"+\n         this.state.time.seconds+\" seconds\");\n        }\n        \n        else if (!this.props.GameIsStarted){\n            this.setState({\n                time:{\n                    minutes:0,\n                    seconds:0\n                }\n            });\n        }     \n    }\n    componentDidMount(){\n            this.timer=setInterval(\n                ()=>this.tick(),1000\n            );\n    }\n    render(){\n        \n        return(\n            <div id=\"timeClock\">\n                <a className=\"timeClock\">\n        {(\"0\"+this.state.time.minutes).slice(-2)}:{(\"0\"+this.state.time.seconds).slice(-2)}\n                </a>\n            </div>\n        );\n    }\n    \n\n}\n\n\n\nclass MainClass extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            imageURL:\"https://www.success.com/wp-content/uploads/2019/12/How-to-Align-Your-Career-With-Your-Personal-Definition-of-Success.jpg\",\n            imageIsLoaded:false,\n            RendAgain:false,\n            RendOnError:false\n        }\n        this.RefForSImage=React.createRef();\n        this.OnChangeimageURL=this.OnChangeimageURL.bind(this);\n        this.RendAgainImageIsLoaded=this.RendAgainImageIsLoaded.bind(this);\n        this.RendAgainImageLoadError=this.RendAgainImageLoadError.bind(this);\n    }\n    RendAgainImageIsLoaded(){\n        this.setState({RendAgain:true});\n    }\n    RendAgainImageLoadError(){\n        this.setState({RendAgain:!this.state.RendAgain});\n    }\n    \n    OnChangeimageURL(event){\n        \n        this.setState({\n            imageURL:event.target.value\n        });\n    }\n    render(){\n        return(\n            <div>\n                <Game\n                imageURL={this.state.imageURL}\n                OnChangeimageURL={this.OnChangeimageURL}\n                />\n                <SourceImage\n                imageURL={this.state.imageURL}\n                onLoad={this.RendAgainImageIsLoaded}\n                onError={this.RendAgainImageLoadError} /*DisableGameWhenChangeOnlyOneCharacterInImageURL*/\n                />\n            </div>\n        );\n    }\n}\n\n\n           \nReactDOM.render(<MainClass/>,document.getElementById(\"root\"));"],"sourceRoot":""}